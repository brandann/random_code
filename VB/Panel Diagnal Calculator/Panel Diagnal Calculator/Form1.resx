<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABDAUIDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooASvhLXf+Rh1P8A6+5f/QzX3dXwlro/4qDUz/09y9/9s0AZwr3f4z/8
        kt8Ef9co/wD0QteECvdvjKc/C3wRn/nlH/6IWgDwg16/+zp/yP2of9gqT/0bFXkJr179nXjx/f8A/YLk
        /wDRsVAnsSa9/wAjFqf/AF9y/wDoZrPrQ17/AJGLU/8Ar7lPB/2zWf617UZpU0jypJ8zPpPwr/yKej/9
        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
</value>
  </data>
</root>